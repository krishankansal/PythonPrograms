Method Overloading:
---------------------
Method Overloading is the class having methods that are the same name with 
different arguments.
Arguments different will be based on a number of arguments and types of arguments.
It is used in a single class.
It is also used to write the code clarity as well as reduce complexity.

Is method overloading possible in python?
------------------------------------------
Like other languages (for example method overloading in C++) do, 
python does not supports method overloading by default. 
The problem with method overloading in Python is that we may overload the methods 
but can only use the latest defined method.

Why Python does not support method overloading?
-----------------------------------------------
Python does not support method overloading, that is, it is not possible to 
define more than one method with the same name in a class in python. 
This is because method arguments in python do not have a type. 
A method accepting one argument can be called with an integer value, 
a string or a double.

The problem with method overloading in Python is that we may overload the methods 
but can only use the latest defined method.

# First product method. 
# Takes two argument and print their 
# product 
def product(a, b): 
    p = a * b 
    print(p) 
      
# Second product method 
# Takes three argument and print their 
# product 
def product(a, b, c): 
    p = a * b*c 
    print(p) 
  
# Uncommenting the below line shows an error     
# product(4, 5) 
  
# This line will call the second product method 
product(4, 5, 5) 
Output:

100

# No need for method overloading in python
-------------------------------------------
    # we can always do like this
    def add(self, a = 0, b = 0, c=0, d=0):
        return a + b + c + d

class A:      
    
    def add(self, a = 0, b = 0, c=0, d=0):
        return a + b + c + d     

print(A().add(4, 5))
print(A().add(4, 5, 6))
print(A().add(4, 5, 6,7))
*********************************
Output:
--------
9
15
22

